---
- Title: "Bollywood vs Tollywood Title Clash" 
- Difficulty: easy
- Bloom Taxonomy: "Apply"
- Subjects: "problem-solving"
- Topics: ["sample-topic"]
- Sub Topics: ["sample-subtopic"]
- Tags: ["practice-question"]
- Company: # Keep it empty
---

### Problem Statement
Two upcoming movie trailers are releasing on the same weekend, one from Bollywood and one from Tollywood. Both have titles of the same length, using only Latin letters (uppercase/lowercase).

The film critics want to decide:
- Which movie title would appear **first alphabetically**,
- Or if they are **equal ignoring case**.

Case should **not matter**, so `"R"` and `"r"` are considered the same.

### Input Format
First line: Title of movie 1 (string length 1–100)
Second line: Title of movie 2 (same length)

### Output Format
- `-1` if movie 1's title < movie 2's title (case-insensitive)
- `1` if movie 1's title > movie 2's title (case-insensitive)  
- `0` if they are equal (case-insensitive)

### Constraints
- 1 ≤ length of each title ≤ 100
- Both titles have the same length
- Titles contain only Latin letters (a-z, A-Z)

---

**Test Case 1**

Input:
```
abcdefg
AbCdEfG
```

Output:
```
0
```

Explanation:
```
Both titles are identical when compared case-insensitively: "abcdefg" == "ABCDEFG", so the result is 0.
```

**Test Case 2**

Input:
```
RRR
rrr
```

Output:
```
0
```

Explanation:
```
Both titles are identical when compared case-insensitively: "RRR" == "rrr", so the result is 0.
```

**Test Case 3**

Input:
```
abc
abd
```

Output:
```
-1
```

Explanation:
```
"abc" comes before "abd" alphabetically (case-insensitive), so the result is -1.
```

**Test Case 4**

Input:
```
xyz
abc
```

Output:
```
1
```

Explanation:
```
"xyz" comes after "abc" alphabetically (case-insensitive), so the result is 1.
```

**Test Case 5**

Input:
```
BaHuBaLi
BAHUBALI
```

Output:
```
0
```

Explanation:
```
Both titles are identical when compared case-insensitively: "BAHUBALI" == "BAHUBALI", so the result is 0.
```

**Test Case 6**

Input:
```
Dangal
SULTAN
```

Output:
```
-1
```

Explanation:
```
"DANGAL" comes before "SULTAN" alphabetically (case-insensitive), so the result is -1.
```

**Test Case 7**

Input:
```
War
PK
```

Output:
```
1
```

Explanation:
```
"WAR" comes after "PK" alphabetically (case-insensitive), so the result is 1.
```

---

## Python Solution

```python
def compute(title1, title2):
    # Convert both titles to lowercase for case-insensitive comparison
    title1_lower = title1.lower()
    title2_lower = title2.lower()
    
    # Compare lexicographically
    if title1_lower < title2_lower:
        return -1
    elif title1_lower > title2_lower:
        return 1
    else:
        return 0

title1 = input().strip()
title2 = input().strip()
result = compute(title1, title2)
print(result)
```

## Java Solution

```java
import java.util.*;

public class Main {
    public static int compute(String title1, String title2) {
        // Convert both titles to lowercase for case-insensitive comparison
        String title1Lower = title1.toLowerCase();
        String title2Lower = title2.toLowerCase();
        
        // Compare lexicographically
        int comparison = title1Lower.compareTo(title2Lower);
        
        if (comparison < 0) {
            return -1;
        } else if (comparison > 0) {
            return 1;
        } else {
            return 0;
        }
    }
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String title1 = sc.nextLine().trim();
        String title2 = sc.nextLine().trim();
        System.out.println(compute(title1, title2));
        sc.close();
    }
}
```

## C++ Solution

```cpp
#include <iostream>
#include <string>
#include <algorithm>
using namespace std;

int compute(string title1, string title2) {
    // Convert both titles to lowercase for case-insensitive comparison
    transform(title1.begin(), title1.end(), title1.begin(), ::tolower);
    transform(title2.begin(), title2.end(), title2.begin(), ::tolower);
    
    // Compare lexicographically
    if (title1 < title2) {
        return -1;
    } else if (title1 > title2) {
        return 1;
    } else {
        return 0;
    }
}

int main() {
    string title1, title2;
    getline(cin, title1);
    getline(cin, title2);
    
    cout << compute(title1, title2) << endl;
    return 0;
}
```
