---
- Title: "Rising Batsman vs Veteran Batsman" 
- Difficulty: easy
- Bloom Taxonomy: "Apply"
- Subjects: "problem-solving"
- Topics: ["sample-topic"]
- Sub Topics: ["sample-subtopic"]
- Tags: ["practice-question"]
- Company: # Keep it empty
---

### Problem Statement
At an IPL training camp, a young batsman Rohan wants to outscore the veteran Viraj.

- Rohan starts with a batting score of `a`, and Viraj starts with `b`.
- Each year, Rohan's skills improve dramatically and his score **triples**.
- Viraj, being consistent, has his score **doubled** each year.

Initially, `a ≤ b`. Determine how many full years it will take for Rohan's score to **strictly exceed** Viraj's score.

### Input Format
Two integers `a` and `b`, separated by a space:
- `a`: initial score of Rohan
- `b`: initial score of Viraj

### Output Format
Print a single integer — the minimum number of years after which Rohan's score exceeds Viraj's.

### Constraints
- 1 ≤ a ≤ b ≤ 10

---

**Test Case 1**

Input:
```
4 7
```

Output:
```
2
```

Explanation:
```
Initially: Rohan = 4, Viraj = 7
After 1 year: Rohan = 4×3 = 12, Viraj = 7×2 = 14 (Rohan still behind)
After 2 years: Rohan = 12×3 = 36, Viraj = 14×2 = 28 (Rohan exceeds Viraj)
Answer: 2 years
```

**Test Case 2**

Input:
```
4 9
```

Output:
```
3
```

Explanation:
```
Initially: Rohan = 4, Viraj = 9
After 1 year: Rohan = 12, Viraj = 18 (Rohan behind)
After 2 years: Rohan = 36, Viraj = 36 (Equal, not strictly greater)
After 3 years: Rohan = 108, Viraj = 72 (Rohan exceeds Viraj)
Answer: 3 years
```

**Test Case 3**

Input:
```
1 1
```

Output:
```
1
```

Explanation:
```
Initially: Rohan = 1, Viraj = 1 (Equal)
After 1 year: Rohan = 1×3 = 3, Viraj = 1×2 = 2 (Rohan exceeds Viraj)
Answer: 1 year
```

**Test Case 4**

Input:
```
2 6
```

Output:
```
3
```

Explanation:
```
Initially: Rohan = 2, Viraj = 6
After 1 year: Rohan = 6, Viraj = 12 (Rohan behind)
After 2 years: Rohan = 18, Viraj = 24 (Rohan behind)
After 3 years: Rohan = 54, Viraj = 48 (Rohan exceeds Viraj)
Answer: 3 years
```

**Test Case 5**

Input:
```
1 2
```

Output:
```
2
```

Explanation:
```
Initially: Rohan = 1, Viraj = 2
After 1 year: Rohan = 3, Viraj = 4 (Rohan behind)
After 2 years: Rohan = 9, Viraj = 8 (Rohan exceeds Viraj)
Answer: 2 years
```

**Test Case 6**

Input:
```
5 10
```

Output:
```
2
```

Explanation:
```
Initially: Rohan = 5, Viraj = 10
After 1 year: Rohan = 15, Viraj = 20 (Rohan behind)
After 2 years: Rohan = 45, Viraj = 40 (Rohan exceeds Viraj)
Answer: 2 years
```

**Test Case 7**

Input:
```
3 3
```

Output:
```
1
```

Explanation:
```
Initially: Rohan = 3, Viraj = 3 (Equal)
After 1 year: Rohan = 9, Viraj = 6 (Rohan exceeds Viraj)
Answer: 1 year
```

---

## Python Solution

```python
def compute(a, b):
    years = 0
    rohan_score = a
    viraj_score = b
    
    # Simulate year by year until Rohan's score strictly exceeds Viraj's
    while rohan_score <= viraj_score:
        years += 1
        rohan_score *= 3  # Rohan's score triples each year
        viraj_score *= 2  # Viraj's score doubles each year
    
    return years

a, b = map(int, input().split())
result = compute(a, b)
print(result)
```

## Java Solution

```java
import java.util.*;

public class Main {
    public static int compute(int a, int b) {
        int years = 0;
        int rohanScore = a;
        int virajScore = b;
        
        // Simulate year by year until Rohan's score strictly exceeds Viraj's
        while (rohanScore <= virajScore) {
            years++;
            rohanScore *= 3;  // Rohan's score triples each year
            virajScore *= 2;  // Viraj's score doubles each year
        }
        
        return years;
    }
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        System.out.println(compute(a, b));
        sc.close();
    }
}
```

## C++ Solution

```cpp
#include <iostream>
using namespace std;

int compute(int a, int b) {
    int years = 0;
    int rohanScore = a;
    int virajScore = b;
    
    // Simulate year by year until Rohan's score strictly exceeds Viraj's
    while (rohanScore <= virajScore) {
        years++;
        rohanScore *= 3;  // Rohan's score triples each year
        virajScore *= 2;  // Viraj's score doubles each year
    }
    
    return years;
}

int main() {
    int a, b;
    cin >> a >> b;
    cout << compute(a, b) << endl;
    return 0;
}
```
